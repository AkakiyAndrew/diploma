Бердник Михаил Геннадиевич +380957435495
Мороз Борис Иванович

по игре: 

1. Суть самой игры: игроку в начале дается база (квадратная штука внизу рисунка) и какое-то количество энергии. Игрок может строить ядра (мелкие постройки со светло-синим покрытием вокруг), они регулярно дают игроку энергию в зависимости от того, сколько территории покрывают. Энергия тратится на создание новых построек. Игрок может "продавать" свои ненужные постройки, получая ~75% от их стоимости.

Также игрок может строить три типа турелей: ракетная (бьет немного, но часто), лазерная (бьет редко, но сильно) и ПВО (единственная, которая может подбивать воздушных юнитов противника).
Л - огнемет, бьет по площади, часто и немного.
Т - без изменений
В - без изменений
Турели можно строить только на покрытии вокруг ядер. Возможно, турели будут тратить за каждый выстрел какое-то количество энергии, решу позже.

Задача игрока - уничтожить главный улей Жучар (крупная темно-красная штука сверху рисунка). Улей регулярно плодит ульи поменьше (розовые штуки), которые создают для Жучар еду. Создание новых ульев не требует затрат еды, и происходит на незанятых ядрами и другими ульями местах. Занятое место обозначается темно-фиолетовой слизью, которая дает еду в зависимости от занятой площади (или нет?) и ускоряет передвижение Жучар по ней.

Еда тратится главным ульем для создания жучар, которые идут в атаку на игрока. Их три типа: таракашка (слабый, шустрый, дешевый), жук (сильный, медленный, дорогой), комар (средний по силе и цене, но летает).

Возможно, Жучары и игрок смогут улучшать своих юнитов, но эту идею оставлю на потом.

2.1 Machine Learning: собственно, главная идея и фишка состоит в том, чтобы прицепить машинное обучение Жучарам, дабы те адаптировались к действиям игрока. Адаптация будет выглядеть следующим образом:
	1) Улей наплодил группу Жучар, допустим, 10 таракашек, 3 жука и 1 комара.
	2) У игрока есть 4 ракетницы и 1 лазерная турель.
	3) Во время боя турели легко перебили таракашек на подходе, но жуки успели нанести какой-то ущерб, а комар и вовсе остался жив и безнаказанно наносит урон постройкам игрока.
	4) После боя Жучары подсчитали то, сколько урона нанес и получил каждый тип Жучар, и подкрутили соотношение своих войск.

После этого цикл начинается сначала, но в этот раз улей плодит, например 0 таракашек, 4 жука и 5 комаров.


2.2 Поиск пути: Жучары будут стараться обходить места, где их было убито много, и попадать в те места, где они смогли нанести много ущерба. Как эту штуку реализовать я уже по большей части знаю (есть отдаленный по смыслу рабочий прототип), но будут свои нюансы. Для каждого типа жуков своя "карта урона". Карта урона должна учитывать бонус от скорости передвижения (уменьшает стоимость клетки на какой-то процент/количество при построении пути).

Циклы обучения должны происходить спустя какое-то количество волн атак, чтобы обучение не происходило слишком быстро.
Сделать режим "глупого" ИИ, который будет лишен управления нейросетью, и просто идет напролом - для получения данных о "глупых" действиях, чтобы сравнить с "умными".

Идея: сделать базовое убывание отрицательной стоимости клетки, обусловленной потерями, и бонусов полученных за нанесенный урон (какой-то небольшой процент).

Карты сделать разных размеров, с препятствиями. Интересным будет взглянуть на поведение жуков на сложных картах, где игрок появляется в центре, в окружении.
Идея: добавить разные типы тайлов (болота, вода, горы, и т.п.), которые будут проходимы, но замедляют движение. Реализовать как базовый отрицательный бонус при рассчете пути движения.

Карты изначально будут покрыты туманом войны, как для жуков, так и для игрока (будет отображено местонахождение главных баз сторон). Препятствия и типы местностей тоже не будут видны с начала, жукам придется случайно выбирать путь (дать неразведанной области приоритет?), разведывая маршруты к базе. Туман войны снимается насовсем с выбранной области (C&C-формат). Запихивать в нейросеть только те турели, что были разведаны.

Поиск пути: строится один раз прямиком к базе игрока, перестройку делать только если наткнется на неразведанный непроходимый участок (или локально переходить жучарой, хотя это хуже, кажется), при нахождении противника в радиусе атаки - атаковать его (постройка нового маршрута?).

Идея: формировать общую текстуру тайлов (без построек) после каждого построенного/уничтоженного здания.
Графика: оставлять долгоживущие лужи крови в местах гибели жуков, для отображения мест которые они будут избегать.

Распределение энергии: по приоритету, сперва перезарядка турелей, ремонт, затем строительство. Дать возможность игроку выставить приоритет на постройки, дабы они получали энергию первыми в очереди.

3.1 Машинное обучение для стороны Игрока. 
Добавить его также и для этой фракции, нейросеть должна выдавать предпочтительный тип следующей турели, ставящийся на фронтире в соответствии с составленной картой частоты пробегания жуков (по карте на каждый тип). Главная сложности - научить бота ставить турель там где надо, и можно это сделать (с использованием карты доступной местности).

Для отчета дипломной работы потребуются графики полученных/затраченных ресурсов, полученного нанесенного урона, боевой эффективности, количества наплодившихся жучар и т.п. Необходимо вести учет всего этого и выводить в виде удобных накладывающихся друг на друга графиков.
Режимы для показа карты с поиском пути, клетками где получен урон, графики всяких показателей и текущие выводы нейросети.
Сделать отдельно тестирование нейросети, с простым обсчетом боев, выводом результатов и текущих показателей и т.п.

атакующие юниты/турели: если есть нацеливание на противника - атаковать его (передавать в функцию атаки атакующего и цель, чтобы удалить нацеливание если нужно), если нет - проверять есть ли в округе противник, если да - нацелится на него





Игровой цикл:

Инициализация(разовая, всякие переменные, карты и т.п.)

Цикл, пока не-нужно-закрывать:
	Рассчет(рассчет положения юнитов, курсора, нажатых клавиш и т.п.)
		В зависимости от состояния игры(???):
		-в меню
		-в игре
	Отрисовка(тайлы, юниты, GUI)

Деинициализация()